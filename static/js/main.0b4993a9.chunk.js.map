{"version":3,"sources":["Components/Container/Container.styled.jsx","Components/ContactForm/ContactForm.jsx","Components/Filter/Filter.jsx","Components/ContactList/ContactList.jsx","Components/App/App.jsx","index.js"],"names":["Container","styled","div","INITIAL_STATE","name","number","ContactForm","state","handleChangeForm","target","value","setState","handleFormSubmit","event","preventDefault","onAdd","props","validateForm","id","uuid","resetForm","onCheckUnique","this","onSubmit","type","onChange","placeholder","pattern","title","required","Component","Filter","filter","ContactListItem","onRemove","onClick","ContactsList","contacts","length","map","contact","App","handleAddContact","newContact","handleCheckUniqueContact","isExistContact","find","alert","handleRemoveContact","handleFilterChange","getVisibleContacts","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b4993a9.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  max-width: 1170px;\n  margin-right: auto;\n  margin-left: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n","// import PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport { v4 as uuid } from 'uuid';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nexport class ContactForm extends Component {\n  state = INITIAL_STATE;\n\n  handleChangeForm = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n\n    const { name, number } = this.state;\n    const { onAdd } = this.props;\n\n    const isValidatedForm = this.validateForm();\n    if (!isValidatedForm) return;\n    onAdd({ id: uuid(), name, number });\n    this.resetForm();\n  };\n\n  validateForm = () => {\n    const { name } = this.state;\n    const { onCheckUnique } = this.props;\n\n    return onCheckUnique(name);\n  };\n\n  resetForm = () => this.setState(INITIAL_STATE);\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleFormSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChangeForm}\n            placeholder=\"Enter contact's name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"The name can only consist of letters, apostrophe, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan etc.\"\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChangeForm}\n            placeholder=\"Enter contact's phone number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\n// ContactForm.propTypes = {};\n","export const Filter = ({ filter, onChange }) => {\n  return (\n    <label>\n      Find contact by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={({ target }) => onChange(target.value)}\n        placeholder=\"Enter name for Search\"\n      />\n    </label>\n  );\n};\n","const ContactListItem = ({ id, name, number, onRemove }) => {\n  return (\n    <li>\n      {name}: {number} <button onClick={() => onRemove(id)}>delete</button>\n    </li>\n  );\n};\n\nexport const ContactsList = ({ contacts, onRemove }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <ContactListItem {...contact} onRemove={onRemove} />\n      ))}\n    </ul>\n  );\n};\n","import { Component } from 'react';\n\nimport { ContactForm } from 'Components/ContactForm';\nimport { Filter } from 'Components/Filter';\nimport { ContactsList } from 'Components/ContactList';\n\nexport class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  handleAddContact = newContact =>\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, newContact],\n    }));\n\n  handleCheckUniqueContact = name => {\n    const { contacts } = this.state;\n\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n\n    isExistContact && alert('Contact is already exist');\n\n    return !isExistContact;\n  };\n\n  handleRemoveContact = id =>\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n\n  handleFilterChange = filter => this.setState({ filter });\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <>\n        <h2>Phonebook</h2>\n        <ContactForm\n          onAdd={this.handleAddContact}\n          onCheckUnique={this.handleCheckUniqueContact}\n        />\n        <h2>Contacts List</h2>\n        <Filter filter={filter} onChange={this.handleFilterChange} />\n        <ContactsList\n          contacts={visibleContacts}\n          onRemove={this.handleRemoveContact}\n        />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nimport { Container } from 'Components/Container';\nimport { App } from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Container>\n      <App />\n    </Container>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}